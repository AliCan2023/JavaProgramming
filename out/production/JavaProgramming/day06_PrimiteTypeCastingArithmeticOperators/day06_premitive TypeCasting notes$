Java Day06:
Topics: Primitive Type Castings
		Arithmetic Operators

Package name: day06_PrimitiveTypeCastings

Warmup tasks
	1. Create a class named BirthDay and create the following variable
			 name, birthDay(int), birthMonth(String), birthYear(int)

			 use concatenation to display the birthday of the person

			 	if  name = "John"
			 		birthDay = 25
			 	    birthMonth = "April"
			 	    birthYear = 1995;

			 	output:
			 		John was born on April/25/1995.


Primitives:

	double > float > long > int > short > byte

	smaller primitives can be directly assigned to larger primitive type;
// implicit casting; smaller primitive type is assigned  by compiler automatically to the longer type eg;

        byte a = 100;
        short b = a;
	larger ptimitives can NOT be directly assigned to smaller primitive types (need to be casted manually)

	// explicit casting:  larger primitive type CANNOT be directly assigned to smaller type;

            double  c = 5.5;
            short d = (short) c;

            System.err.println("short d = " + d);
--------------
intellij explicit casting shortcut: Mac users click the "Red bulb" and you will see a proper casting list;


   Arthmetic Operators; +: Addition
                        -: Subtraction
                        *: Multiplication
                        /: Division
                        %: Remainder
                                 In Java division format:
                                   integer / integer =====> integer
                                   decimal /integer ======>decimal
                                   integer / decimal =====>decimal
                                   decimal / decimal =====> decimal
                         In java:
                                   10 /4 = 2
                                   10.0 /4 = 2.5
                                   10 / 4.0 = 2.5
                                   10d / 4= 2.5
                                   10 / 4d = 2.5
                         In math:
                         10 / 4 = 2.5;
                          remainder: numerator -(denominator * integer result)
                                     10       -  ( 4 * 2)
                                     10       -    8
                               2



